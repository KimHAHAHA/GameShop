import { Component } from '@angular/core';
import { Header } from '../../../components/header/header';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Game } from '../../../services/api/game';
import { ActivatedRoute } from '@angular/router';
import { lastValueFrom } from 'rxjs';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-u-details',
  standalone: true,
  imports: [CommonModule, Header, FormsModule],
  templateUrl: './u-details.html',
  styleUrls: ['./u-details.scss'],
})
export class UDetails {
  game: any = {};
  showPopup = false;
  isLoading = true;

  discountCode = ''; // ‚úÖ ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
  discountPercent = 0; // ‚úÖ ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å backend
  discountedPrice = 0; // ‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏•‡∏î

  apiUrl = 'https://kimky-shop-backend.onrender.com/discount_codes';

  constructor(
    private route: ActivatedRoute,
    private gameService: Game,
    private http: HttpClient
  ) {}

  async ngOnInit() {
    const id = this.route.snapshot.paramMap.get('id');
    if (!id) return;

    try {
      this.isLoading = true;
      this.game = await this.gameService.getGameById(id);
      this.discountedPrice = this.game.price; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ï‡πá‡∏°
    } catch (err) {
      console.error('‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err);
    } finally {
      this.isLoading = false;
    }
  }

  onBuy() {
    this.showPopup = true;
  }

  closePopup() {
    this.showPopup = false;
    this.discountCode = '';
    this.discountPercent = 0;
    this.discountedPrice = this.game.price;
  }

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏∞‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤
  async confirmPurchase() {
    const user = this.gameService.getUser();
    if (!user) return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô');

    try {
      this.isLoading = true;

      // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
      if (this.discountCode.trim()) {
        try {
          const res: any = await this.gameService.checkDiscountCode(
            this.discountCode.trim()
          );

          // üîπ ‡∏ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
          this.discountPercent = Number(res.discount_percent);
          const discountAmount = (this.game.price * this.discountPercent) / 100;
          this.discountedPrice = this.game.price - discountAmount;

          alert(
            `‚úÖ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏•‡∏î ${
              this.discountPercent
            }%\n‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: ${this.discountedPrice.toFixed(2)} ‡∏ö‡∏≤‡∏ó`
          );
        } catch (err: any) {
          // üîª ‡∏ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
          alert(err.error?.message || '‚ùå ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
          this.discountedPrice = this.game.price; // ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ï‡πá‡∏°
        }
      } else {
        // üü° ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î ‚Äî ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ï‡πá‡∏°
        this.discountedPrice = this.game.price;
      }

      // ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ (‡∏™‡πà‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏•‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ï‡πá‡∏°)
      const res2: any = await this.gameService.purchaseGame(
        user.uid,
        this.game.gid,
        this.discountedPrice
      );

      alert(res2.message || '‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Å‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      this.showPopup = false;
    } catch (err: any) {
      console.error('‚ùå ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Å‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
      alert(err.error?.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Å‡∏°');
    } finally {
      this.isLoading = false;
    }
  }

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
  async onAddToCart() {
    const user = this.gameService.getUser();
    if (!user) return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô');

    try {
      const res: any = await this.gameService.addToCart(
        user.uid,
        this.game.gid
      );
      alert(res.message || '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (err: any) {
      console.error('‚ùå Add to Cart Error:', err);
      alert(err.error?.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°');
    }
  }
}
